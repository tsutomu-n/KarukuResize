name: Build Executables

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: Windows
            artifact: karukuresize-windows
            python-version: '3.12'
          - os: macos-latest
            name: macOS
            artifact: karukuresize-macos
            python-version: '3.12'
          - os: ubuntu-latest
            name: Linux
            artifact: karukuresize-linux
            python-version: '3.12'
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-pil python3-pil.imagetk
          # 日本語フォントのインストール
          sudo apt-get install -y fonts-noto-cjk
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install -e .
          uv pip install pyinstaller
          
      - name: Build with PyInstaller
        run: |
          pyinstaller karukuresize.spec --clean --noconfirm
          
      - name: Create distributable package (Windows)
        if: runner.os == 'Windows'
        run: |
          # Windowsの配布用パッケージを作成
          Compress-Archive -Path dist\KarukuResize\* -DestinationPath KarukuResize-Windows.zip
          
      - name: Create distributable package (macOS)
        if: runner.os == 'macOS'
        run: |
          # macOSの配布用パッケージを作成
          cd dist
          # .appバンドルが作成されている場合
          if [ -d "KarukuResize.app" ]; then
            zip -r ../KarukuResize-macOS.zip KarukuResize.app
          else
            zip -r ../KarukuResize-macOS.zip KarukuResize
          fi
          
      - name: Create distributable package (Linux)
        if: runner.os == 'Linux'
        run: |
          # Linuxの配布用パッケージを作成
          cd dist
          tar -czf ../KarukuResize-Linux.tar.gz KarukuResize
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            KarukuResize-Windows.zip
            KarukuResize-macOS.zip
            KarukuResize-Linux.tar.gz
          if-no-files-found: error
          retention-days: 30
          
  test-build:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: Windows
            artifact: karukuresize-windows
          - os: macos-latest
            name: macOS
            artifact: karukuresize-macos
          - os: ubuntu-latest
            name: Linux
            artifact: karukuresize-linux
            
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          
      - name: Test executable (Windows)
        if: runner.os == 'Windows'
        run: |
          Expand-Archive -Path KarukuResize-Windows.zip -DestinationPath test
          # バージョン情報の確認など、基本的なテストを実行
          ./test/KarukuResize/KarukuResize.exe --version || echo "Version check not implemented"
          
      - name: Test executable (macOS)
        if: runner.os == 'macOS'
        run: |
          unzip KarukuResize-macOS.zip
          # 実行権限の確認
          ls -la KarukuResize.app/Contents/MacOS/ || ls -la KarukuResize/
          
      - name: Test executable (Linux)
        if: runner.os == 'Linux'
        run: |
          tar -xzf KarukuResize-Linux.tar.gz
          # 実行権限の確認
          ls -la KarukuResize/
          
  release:
    needs: test-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            karukuresize-windows/KarukuResize-Windows.zip
            karukuresize-macos/KarukuResize-macOS.zip
            karukuresize-linux/KarukuResize-Linux.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}